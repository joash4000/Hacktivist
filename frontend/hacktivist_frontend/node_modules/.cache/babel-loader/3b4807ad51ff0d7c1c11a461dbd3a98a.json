{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SRIJAN\\\\Desktop\\\\hacktivist\\\\Hacktivist__1\\\\frontend\\\\hacktivist_frontend\\\\src\\\\components\\\\leetcode.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Leetcode extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: {},\n      DataisLoaded: false\n    };\n  } // ComponentDidMount is used to\n  // execute the code \n\n\n  componentDidMount() {\n    console.log(this.props);\n    const Banner = fetch(`https://leetcode-stats-api.herokuapp.com/${this.props.lu}?format=json`).then(res => res.json()).then(json => {\n      this.setState({\n        items: json,\n        DataisLoaded: true\n      }); // let  datas = Array.from(items.data);\n      // console.log(datas);\n    });\n  }\n\n  render() {\n    const {\n      items,\n      DataisLoaded\n    } = this.state;\n    console.log(items);\n    if (!DataisLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Please wait some time.... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 31\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: items.easySolved\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Leetcode;","map":{"version":3,"sources":["C:/Users/SRIJAN/Desktop/hacktivist/Hacktivist__1/frontend/hacktivist_frontend/src/components/leetcode.js"],"names":["React","Component","Leetcode","constructor","state","items","DataisLoaded","componentDidMount","console","log","props","Banner","fetch","lu","then","res","json","setState","render","easySolved"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;;;AACA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAEjCE,EAAAA,WAAW,GAAG;AACV;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIH,GATgC,CAWjC;AACA;;;AACAC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACD,UAAMC,MAAM,GACXC,KAAK,CACR,4CAA2C,KAAKF,KAAL,CAAWG,EAAG,cADjD,CAAL,CAEKC,IAFL,CAEWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFnB,EAGKF,IAHL,CAGWE,IAAD,IAAU;AACZ,WAAKC,QAAL,CAAc;AACVZ,QAAAA,KAAK,EAAEW,IADG;AAEVV,QAAAA,YAAY,EAAE;AAFJ,OAAd,EADY,CAKZ;AACA;AACH,KAVL,CADD;AAYF;;AAEDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA,KAAF;AAAQC,MAAAA;AAAR,QAAyB,KAAKF,KAApC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,QAAI,CAACC,YAAL,EAAmB,oBAAO;AAAA,8BACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADsB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAGnB,wBACA;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA,gBAEKD,KAAK,CAACc;AAFX;AAAA;AAAA;AAAA;AAAA,YADA;AAsBC;;AAzD4B;;AA4DjC,eAAejB,QAAf","sourcesContent":["import React,{ Component } from \"react\";\r\nclass Leetcode extends Component {\r\n\r\nconstructor() {\r\n    super();\r\n\r\n    this.state = {\r\n        items: {},\r\n        DataisLoaded: false,\r\n    };\r\n}\r\n\r\n// ComponentDidMount is used to\r\n// execute the code \r\ncomponentDidMount() {\r\n    console.log(this.props)\r\n   const Banner = \r\n    fetch(\r\n`https://leetcode-stats-api.herokuapp.com/${this.props.lu}?format=json`)\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n            this.setState({\r\n                items: json,\r\n                DataisLoaded: true\r\n            });\r\n            // let  datas = Array.from(items.data);\r\n            // console.log(datas);\r\n        })\r\n}\r\n\r\nrender() {\r\n    const { items,DataisLoaded } = this.state;\r\n    console.log(items)\r\n    if (!DataisLoaded) return <div>\r\n        <h1> Please wait some time.... </h1> </div> ;\r\n\r\n    return (\r\n    <div className = \"App\">\r\n        {/*<h1> Fetch data from an api in react </h1> */}\r\n        {items.easySolved}\r\n         {\r\n        //    Object.keys(items).map((key,i) =>(\r\n        //        <p key={i}>\r\n        //            <span>Key Name: {key}</span>\r\n        //            <span> Value: {items[key]}</span>\r\n        //        </p>\r\n        //    ))\r\n            // items.map((item) => ( \r\n            // <ol key = { item.id } >\r\n            //     {/* User_Name: { item.username }, \r\n            //     Full_Name: { item.name }, \r\n            //     User_Email: { item.email }  */}\r\n            //     {item.ranking}\r\n            //     </ol>\r\n            // ))\r\n        }\r\n    </div>\r\n);\r\n    }\r\n}\r\n\r\nexport default Leetcode;"]},"metadata":{},"sourceType":"module"}